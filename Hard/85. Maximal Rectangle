class Solution {
public:
    int largestRectangleArea(vector<int> &histo) 
    {
      stack < int > st;
      int maxA = 0;
      int n = histo.size();
      for (int i = 0; i <= n; i++) 
      {
        while (!st.empty() && (i == n || histo[st.top()] >= histo[i])) 
        {
          int height = histo[st.top()];
          st.pop();
          int width;
          if (st.empty())
            width = i;
          else
            width = i - st.top() - 1;
          maxA = max(maxA, width * height);
        }
        st.push(i);
      }
      return maxA;
    }

    int maximalRectangle(vector<vector<char>>& matrix) 
    {
        int ans=INT_MIN, n=matrix.size(), m=matrix[0].size();
        vector<int> histo(m,0);
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<m; j++)
            {
                if(matrix[i][j]=='0')
                    histo[j]=0;
                else
                    histo[j]++;
            }
            int area=largestRectangleArea(histo);
            ans=max(ans,area);
        }
        return ans;
    }
};
